#!/usr/bin/env python3
"""
Test script for QR code API endpoint
"""
import requests
import json

def test_qr_api():
    """Test the QR code API endpoint"""
    base_url = "http://localhost:8000"
    
    # First, login as HR to get a token
    login_data = {
        "email": "hr@hoteltest.com",
        "password": "admin123"
    }
    
    try:
        print("🔐 Logging in as HR...")
        login_response = requests.post(f"{base_url}/auth/login", json=login_data)
        
        if login_response.status_code != 200:
            print(f"❌ Login failed: {login_response.status_code}")
            print(f"Response: {login_response.text}")
            return False
        
        login_result = login_response.json()
        token = login_result["token"]
        print("✅ Login successful")
        
        # Test QR code generation for the test property
        property_id = "prop_test_001"  # From test data
        headers = {"Authorization": f"Bearer {token}"}
        
        print(f"📱 Generating QR code for property {property_id}...")
        qr_response = requests.post(f"{base_url}/hr/properties/{property_id}/qr-code", headers=headers)
        
        if qr_response.status_code != 200:
            print(f"❌ QR code generation failed: {qr_response.status_code}")
            print(f"Response: {qr_response.text}")
            return False
        
        qr_result = qr_response.json()
        print("✅ QR code generation successful")
        print(f"   Response keys: {list(qr_result.keys())}")
        if 'property_name' in qr_result:
            print(f"   Property: {qr_result['property_name']}")
        if 'application_url' in qr_result:
            print(f"   Application URL: {qr_result['application_url']}")
        if 'generated_by' in qr_result:
            print(f"   Generated by: {qr_result['generated_by']}")
        if 'qr_code_url' in qr_result:
            print(f"   QR Code URL length: {len(qr_result['qr_code_url'])} characters")
        if 'printable_qr_url' in qr_result:
            print(f"   Printable QR URL length: {len(qr_result['printable_qr_url'])} characters")
        
        return True
        
    except requests.exceptions.ConnectionError:
        print("❌ Could not connect to server. Make sure the backend is running on port 8000.")
        return False
    except Exception as e:
        print(f"❌ Test failed: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_manager_access():
    """Test manager access to QR code generation"""
    base_url = "http://localhost:8000"
    
    # Login as manager
    login_data = {
        "email": "manager@hoteltest.com",
        "password": "manager123"
    }
    
    try:
        print("\n🔐 Logging in as Manager...")
        login_response = requests.post(f"{base_url}/auth/login", json=login_data)
        
        if login_response.status_code != 200:
            print(f"❌ Manager login failed: {login_response.status_code}")
            return False
        
        login_result = login_response.json()
        token = login_result["token"]
        print("✅ Manager login successful")
        
        # Test QR code generation for manager's assigned property
        property_id = "prop_test_001"  # Manager should have access to this
        headers = {"Authorization": f"Bearer {token}"}
        
        print(f"📱 Manager generating QR code for property {property_id}...")
        qr_response = requests.post(f"{base_url}/hr/properties/{property_id}/qr-code", headers=headers)
        
        if qr_response.status_code != 200:
            print(f"❌ Manager QR code generation failed: {qr_response.status_code}")
            print(f"Response: {qr_response.text}")
            return False
        
        qr_result = qr_response.json()
        print("✅ Manager QR code generation successful")
        print(f"   Property: {qr_result['property_name']}")
        print(f"   Generated by: {qr_result['generated_by']}")
        
        return True
        
    except Exception as e:
        print(f"❌ Manager test failed: {e}")
        return False

if __name__ == "__main__":
    print("Testing QR Code API Endpoints")
    print("=" * 40)
    
    hr_success = test_qr_api()
    manager_success = test_manager_access()
    
    if hr_success and manager_success:
        print("\n🎉 All tests passed!")
    else:
        print("\n❌ Some tests failed!")
        
    exit(0 if (hr_success and manager_success) else 1)